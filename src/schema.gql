# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Car {
  """Unique id"""
  id: Int!

  """Car model"""
  model: String!
}

type User {
  """Unique id"""
  id: Int!

  """User name"""
  name: String!
}

type Reservation {
  """Unique id"""
  id: Int!

  """Id of the reserved car"""
  car_id: Int!

  """Id of the reserver"""
  user_id: Int!

  """Start date of the reservation"""
  start_date: DateTime!

  """End date of the reservation"""
  end_date: DateTime!

  """Is the reservation active"""
  isActive: Boolean!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  findOneUser(id: Float!): User!
  findAllCars: [Car!]!
  findOneCar(id: Int!): Car!
  findOneReservation(id: Float!): Reservation!
}

type Mutation {
  createUser(user: CreateUserInput!): User!
  createCar(createCarInput: CreateCarInput!): Car!
  updateCar(updateCarInput: UpdateCarInput!): Car!
  createReservation(reservation: CreateReservationInput!): Reservation!
}

input CreateUserInput {
  """Name of the User"""
  name: String!
}

input CreateCarInput {
  """Model of the car"""
  model: String!

  """Is the car reserved"""
  isReserved: Boolean = false
}

input UpdateCarInput {
  model: String

  """Is the car reserved"""
  isReserved: Boolean = false
  id: Int!
}

input CreateReservationInput {
  id_car: Int!
  user_id: Int!
  start_date: DateTime!
  end_date: DateTime!
}